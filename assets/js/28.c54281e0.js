(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{392:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"运算符重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符重载"}},[t._v("#")]),t._v(" 运算符重载")]),t._v(" "),s("h2",{attrs:{id:"加法重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加法重载"}},[t._v("#")]),t._v(" 加法重载")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Var")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__add__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" ValueError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"类型不一致"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__str__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("f'")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("\"\"\"\n    :param a: 变量1\n    :param b: 变量2\n    :return: 结果\n    >>> a = Var('age', 23, 'int')\n    >>> b = Var('age', 32, 'int')\n    >>> isinstance(a+b, Var)\n    True\n    >>> print(a+b)\n    age, 55, int\n    \"\"\"")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" doctest\n    doctest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("testmod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])]),s("h2",{attrs:{id:"其它运算重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它运算重载"}},[t._v("#")]),t._v(" 其它运算重载")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("表达")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("在内部")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("相加（+）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 + p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ add __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("相减（-）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1-p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ sub __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("相乘（*）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 * p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ mul __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("求幂（**）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 ** p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ pow __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("相除（/）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 / p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ truediv __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("整除（//）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 // p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ floordiv __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("求模 （%）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1％p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ mod __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("按位左移（<<）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 << p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ lshift __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("按位右移（>>）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 >> p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ rshift __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("按位与（and）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 and p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ and __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("按位或（or）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 | 2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ or __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("按位异或（^）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 ^ p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ xor __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("按位否（~）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("〜p1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ invert __()")])])])]),t._v(" "),s("h2",{attrs:{id:"比较符重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较符重载"}},[t._v("#")]),t._v(" 比较符重载")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("操作符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("表达式")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("内部")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("小于（<）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 <p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ lt __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("小于等于（<=）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 <= p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ le __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("等于（==）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 == p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ eq __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("不等于（!=）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1！= p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ ne __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("大于（>）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1> p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ gt __（p2）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("大于等于（>=）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1> = p2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("p1 .__ ge __（p2）")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);