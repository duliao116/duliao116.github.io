(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{406:function(e,i,l){"use strict";l.r(i);var t=l(45),v=Object(t.a)({},(function(){var e=this,i=e.$createElement,l=e._self._c||i;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("ol",[l("li",[e._v("依赖外部的不测")]),e._v(" "),l("li",[e._v("直接调用dao层的不测")]),e._v(" "),l("li",[e._v("主要测试业务逻辑")]),e._v(" "),l("li",[e._v("不依赖外部框架，手工生成实例，使用spring注入时最好采用构造器注入，这样方面构造对象")]),e._v(" "),l("li",[e._v("依赖的其它service进行mock，不要依赖过多service，否则构造对象时很困难")]),e._v(" "),l("li",[e._v("依赖的dao层给mock掉")]),e._v(" "),l("li",[e._v("复杂的私有方法可以使用@VisibleForTesting标识，进行单独的测试")]),e._v(" "),l("li",[e._v("没有返回值的方法使用verify经断言")])])])}),[],!1,null,null,null);i.default=v.exports}}]);